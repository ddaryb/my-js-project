name: Node.js CI/CD with SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code with full history
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarCloud analysis

      # 2. Setup Node.js with built-in caching
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # 3. Install dependencies safely
      - name: Install dependencies
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      # 4. Run tests with coverage
      - name: Run tests with coverage
        run: npm test -- --coverage

      # 5. SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=https://sonarcloud.io/organizations/ddaryb
            -Dsonar.projectKey=my-js-project
            -Dsonar.projectName=my-js-project
            -Dsonar.sources=.  # Changed from 'src' to '.' to scan current directory
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/dist/**
            -Dsonar.coverage.exclusions=**/test/**,**/mock/**

      # 6. Upload coverage report as artifact (optional)
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      # 7. Final status message
      - name: Show completion status
        if: always()
        run: |
          echo "===================================="
          echo "CI/CD pipeline completed successfully!"
          echo "SonarCloud analysis: https://sonarcloud.io/dashboard?id=<your-project-key>"
          echo "Job duration: ${{ job.status }}"
          echo "===================================="